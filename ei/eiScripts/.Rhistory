suppressMessages(library(tidyverse))
suppressMessages(library(eiPack))
suppressMessages(library(rgdal))
suppressMessages(library(foreign))
suppressMessages(library(readr))
suppressMessages(library(optparse))
suppressMessages(library(parallel))
data <- readOGR(dsn=".", layer="../../shapes/GA_precincts/GA_2020_precincts/GA_2020_precincts")
data <- readOGR(dsn=".", layer="../../shapes/GA_precincts/GA_2020_precincts/GA_2020_precincts.shp")
data <- readOGR(dsn=".", layer="/../../shapes/GA_precincts/GA_2020_precincts/GA_2020_precincts")
data <- readOGR(dsn="/../../shapes/GA_precincts/GA_2020_precincts/", layer="GA_2020_precincts")
data <- readOGR(dsn="../../shapes/GA_precincts/GA_2020_precincts/GA_2020_precincts")
data <- readOGR(dsn="../../shapes/GA_precincts/GA_2020_precincts/GA_2020_precincts.shp")
q()
data <- readOGR
data <- readOGR()
suppressMessages(library(tidyverse))
suppressMessages(library(eiPack))
suppressMessages(library(rgdal))
suppressMessages(library(foreign))
suppressMessages(library(readr))
suppressMessages(library(optparse))
suppressMessages(library(parallel))
data <- readOGR()
data <- readOGR(dsn="../../shapes/GA_precincts/GA_2020_precincts/GA_2020_precincts.shp", verbose=FALSE)
data <- as(data, "data.frame")
dim(data)
dim(data)[0]
dim(data)[1]
demographics <- c('AMINCVAP.', 'OCVAP')
candidates <- c('PRES20D', 'PRES20R')
cols <- c(demographics, candidates)
cols
for (col in cols) {
data[[col]][is.na(data[[col]])] <- 0
}
dim(data)[1]
data
head(data)
is.na(data)
count(is.na(data))
q()
dim(data)
12 / 3
int(3.0)
Int(3.0)
as.integer(3.0)
q()
suppressMessages(library(tidyverse))
suppressMessages(library(eiPack))
suppressMessages(library(rgdal))
suppressMessages(library(foreign))
suppressMessages(library(readr))
suppressMessages(library(optparse))
suppressMessages(library(parallel))
data <- readOGR(dsn="../../shapes/AZ_vtds/AZ_2020_VTDs.shp", verbose=FALSE)
head(data)
names(data)
head(data$PRES20D)
sum(data$PRES20D)
data$PRES20D <- as.numeric(data$PRES20D)
head(data$PRES20D)
sum(data$PRES20D)
data$PRES20R <- as.numeric(data$PRES20R)
sum(data$PRES20D) - sum(data$PRES20R)
print(sum(data$PRES20D))
print("Hi: ", sum(data$PRES20D))
q()
